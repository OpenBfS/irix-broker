<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
"-//Puppy Crawl//DTD Check Configuration 1.2//EN"
"http://www.puppycrawl.com/dtds/configuration_1_2.dtd">

<!--
Checkstyle configuration based on sun_checks.xml as provided with the
Maven Checkstyle plugin. Some design related checks where removed.
-->



<module name="Checker">
<property name='localeCountry' value=''/>
<property name='localeLanguage' value=''/>
<!--
    If you set the basedir property below, then all reported file
    names will be relative to the specified directory. See
    http://checkstyle.sourceforge.net/5.x/config.html#Checker

<property name="basedir" value="${basedir}"/>
-->

<!-- Checks that each Java package has a Javadoc file used for commenting. -->
<!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage       -->
<!--<module name="JavadocPackage">
  <property name="allowLegacy" value="true"/>
</module>-->

<!-- Checks whether files end with a new line.                        -->
<!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
<module name="NewlineAtEndOfFile"/>

<!-- Checks that property files contain the same keys.         -->
<!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
<module name="Translation"/>

<module name="FileLength"/>

<!-- Following interprets the header file as regular expressions. -->
<module name="Header">
  <property name="headerFile" value="java.header"/>
  <property name="severity" value="warning"/>
</module>

<module name="FileTabCharacter">
  <property name="eachLine" value="true"/>
</module>

<module name="RegexpSingleline">
  <!-- \s matches whitespace character, $ matches end of line. -->
  <property name="format" value="\s+$"/>
  <property name="message" value="Line has trailing spaces."/>
</module>

<module name="TreeWalker">

  <property name="cacheFile" value="${checkstyle.cache.file}"/>

  <!-- required for SuppressWarningsFilter (and other Suppress* rules not used here) -->
  <!-- see http://checkstyle.sourceforge.net/config_annotation.html#SuppressWarningsHolder -->
  <module name="SuppressWarningsHolder"/>

  <!-- Checks for Javadoc comments.                     -->
  <!-- See http://checkstyle.sf.net/config_javadoc.html -->
  <module name="JavadocType">
    <property name="severity" value="warning"/>
  </module>
  <module name="JavadocMethod">
    <property name="severity" value="warning"/>
    <property name="scope" value="protected"/>
    <property name="validateThrows" value="true"/>
    <property name="allowMissingPropertyJavadoc" value="true"/>
    <property name="tokens" value="METHOD_DEF"/>
  </module>
  <module name="JavadocVariable">
    <property name="scope" value="protected"/>
    <property name="severity" value="warning"/>
  </module>
  <module name="JavadocStyle">
    <property name="severity" value="warning"/>
  </module>


  <!-- Checks for Naming Conventions.                  -->
  <!-- See http://checkstyle.sf.net/config_naming.html -->
  <module name="ConstantName">
    <property name="severity" value="warning"/>
  </module>
  <module name="LocalFinalVariableName">
    <property name="severity" value="warning"/>
  </module>
  <module name="LocalVariableName">
    <property name="severity" value="warning"/>
  </module>
  <module name="MemberName">
    <property name="severity" value="warning"/>
  </module>
  <module name="MethodName">
    <property name="severity" value="warning"/>
  </module>
  <module name="PackageName">
    <property name="severity" value="warning"/>
  </module>
  <module name="ParameterName">
    <property name="severity" value="warning"/>
  </module>
  <module name="StaticVariableName"/>
  <module name="TypeName"/>


  <!-- Checks for Headers                                -->
  <!-- See http://checkstyle.sf.net/config_header.html   -->
  <!-- <module name="Header">                            -->
  <!-- The follow property value demonstrates the ability     -->
  <!-- to have access to ANT properties. In this case it uses -->
  <!-- the ${basedir} property to allow Checkstyle to be run  -->
  <!-- from any directory within a project. See property      -->
  <!-- expansion,                                             -->
  <!-- http://checkstyle.sf.net/config.html#properties        -->
  <!-- <property                                              -->
  <!--     name="headerFile"                                  -->
  <!--     value="${basedir}/java.header"/>                   -->
  <!-- </module> -->


  <!-- Checks for imports                              -->
  <!-- See http://checkstyle.sf.net/config_import.html -->
  <module name="AvoidStarImport"/>
  <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
  <module name="RedundantImport"/>
  <module name="UnusedImports">
    <property name="severity" value="warning"/>
  </module>


  <!-- Checks for Size Violations.                    -->
  <!-- See http://checkstyle.sf.net/config_sizes.html -->
  <module name="LineLength">
    <property name="severity" value="warning"/>
  </module>
  <module name="MethodLength"/>
  <module name="ParameterNumber">
    <property name="severity" value="warning"/>
  </module>


  <!-- Checks for whitespace                               -->
  <!-- See http://checkstyle.sf.net/config_whitespace.html -->
  <module name="EmptyForIteratorPad"/>
  <module name="MethodParamPad"/>
  <module name="NoWhitespaceAfter"/>
  <module name="NoWhitespaceBefore">
    <property name="allowLineBreaks" value="true"/>
  </module>
  <module name="OperatorWrap">
    <property name="option" value="eol"/>
  </module>
  <module name="ParenPad"/>
  <module name="TypecastParenPad"/>
  <module name="WhitespaceAfter">
    <property name="tokens"
                value="SEMI, TYPECAST"/>
  </module>
  <module name="WhitespaceAfter">
    <property name="severity" value="warning"/>
    <property name="tokens" value="COMMA"/>
  </module>

  <module name="WhitespaceAround">
    <property name="allowEmptyMethods" value="true"/>
    <property name="tokens"
                value="ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN,
                       MOD_ASSIGN, SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN,
                       BOR_ASSIGN, BAND_ASSIGN, LITERAL_CATCH, LITERAL_DO,
                       LITERAL_ELSE, LITERAL_FINALLY, LITERAL_FOR,
                       LITERAL_IF, LITERAL_RETURN, LITERAL_SWITCH,
                       LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE"/>
  </module>


  <!-- Modifier Checks                                    -->
  <!-- See http://checkstyle.sf.net/config_modifiers.html -->
  <module name="ModifierOrder"/>
  <module name="RedundantModifier"/>


  <!-- Checks for blocks. You know, those {}'s         -->
  <!-- See http://checkstyle.sf.net/config_blocks.html -->
  <module name="AvoidNestedBlocks"/>
  <module name="EmptyBlock">
    <property name="severity" value="warning"/>
  </module>
  <module name="LeftCurly"/>
  <module name="NeedBraces"/>
  <module name="RightCurly">
    <property name="option" value="same"/>
  </module>


  <!-- Checks for common coding problems               -->
  <!-- See http://checkstyle.sf.net/config_coding.html -->
  <module name="AvoidInlineConditionals">
    <property name="severity" value="warning"/>
  </module>
  <module name="EmptyStatement"/>
  <module name="EqualsHashCode"/>
  <module name="HiddenField">
    <property name="severity" value="warning"/>
  </module>
  <module name="IllegalInstantiation"/>
  <module name="InnerAssignment"/>
  <module name="MagicNumber">
    <property name="severity" value="warning"/>
  </module>
  <module name="MissingSwitchDefault"/>
  <module name="SimplifyBooleanExpression"/>
  <module name="SimplifyBooleanReturn"/>

  <!-- Checks for class design                         -->
  <!-- See http://checkstyle.sf.net/config_design.html -->
  <module name="HideUtilityClassConstructor"/>
  <module name="InterfaceIsType">
    <property name="severity" value="warning"/>
  </module>


  <!-- Miscellaneous other checks.                   -->
  <!-- See http://checkstyle.sf.net/config_misc.html -->
  <module name="ArrayTypeStyle"/>
  <module name="TodoComment">
    <property name="severity" value="warning"/>
  </module>
  <module name="UpperEll"/>

</module>

<!-- Support @SuppressWarnings (added in Checkstyle 5.7) -->
<!-- see http://checkstyle.sourceforge.net/config.html#SuppressWarningsFilter -->
<module name="SuppressWarningsFilter"/>

<!-- Checks properties file for a duplicated properties. -->
<!-- See http://checkstyle.sourceforge.net/config_misc.html#UniqueProperties -->
<module name="UniqueProperties"/>

</module>
